// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Adviser {
    id     String @id 
    firstName   String
    lastName    String
    slug             String @unique
    bio              String
    email    String  @unique
    city     String
    phone    String
    company  String
    password String
    profileImage    String
    secondaryImages  String[]
    clients    Client[]
    role    ROLE   
}
model Client {
    id     String @id 
    firstName   String
    lastName    String
    slug    String
    email    String  @unique
    profileImage    String
    password String
    bio   String
    adviserId    String
    adviser    Adviser  @relation(fields: [ adviserId], references: [id])
    role    ROLE 
    access ACCESS 
    accounts    Account[]
}
enum ROLE {
    ADVISER
    CLIENT
}

enum ACCESS {
    READONLY
    READWRITE
}


model Account {
   id         String @id 
   clientId   String
   client     Client   @relation(fields: [clientId], references: [id])
   totalValue      Float 
   cashAccount     Float 
   adviserFee      String
   adviserFeeType ADVISERFEETYPE
   cashInShares    Float
   cashInInvestments   Float
   shares     ShareInAccount[]
   managedInvestments   ManagedInvestmentInAccount[] 
   name       String @unique
   slug       String
   investmentStrategy INVESTMENSTRATEGY
}

enum ADVISERFEETYPE {
    PERCENTAGE
    FIXED
    MIXED
}
enum INVESTMENSTRATEGY {
    CONSERVATIVE
    MODERATE
    AGRESSIVE
    ETHICAL
    ACTIVE
    PASSIVE
}

model ShareInAccount {
    accountId    String
    account      Account @relation(fields:[accountId], references: [id])
    shareId      String
    share        Share @relation(fields: [shareId], references: [id])
    value        Float

    @@id([accountId,shareId])
}


model Share{
   id   String @id 
   asxCode String
   name String
   category String
   account ShareInAccount[]
}


model ManagedInvestmentInAccount {
    accountId         String
    account           Account @relation(fields:[accountId], references: [id])
    investmentId      String
    managedInvestment    ManagedInvestment @relation(fields: [investmentId], references: [id])
    value             Float

    @@id([accountId,investmentId])
}

model ManagedInvestment {
   id String @id
   name String
   apir String @unique
   nabOwned Boolean
   mer Float
   category INVESTMENTCATEGORY
   accounts ManagedInvestmentInAccount[] 
}
enum INVESTMENTCATEGORY {
    FUND
    SMA
}